name: docker

on: [push, workflow_dispatch]

jobs:
   buildx:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      matrix: 
        version: ["15-jre", "14-jre", "11-jre", "8-jre", "14-jdk-slim", "15-jdk", "14-jdk", "11-jdk", "8-jdk"]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Login to Docker Hub
        run: echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
        if: github.ref == 'refs/heads/master'
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      -
        name: List Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Install yq (mikefarah, go)
        run: sudo su -c 'wget https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq'
      -
        name: Run Buildx (${{ matrix.version }})
        run: |
          docker buildx build \
            --platform $(yq r platform-matrix.yml ${{ matrix.version }}.arch) \
            --output "type=image,push=$([[ $GITHUB_REF == "refs/heads/master" ]] && echo true || echo false)" \
        #   ----------
        #   ESUM Envs (different for each platform + version)
            --env ARM64_ESUM=$(yq r platform-matrix.yml ${{ matrix.version }}.esums.aarch64) \
            --env ARMV7_ESUM=$(yq r platform-matrix.yml ${{ matrix.version }}.esums.armhf) \
            --env PPC64LE_ESUM=$(yq platform-matrix.yml r ${{ matrix.version }}.esums.ppc64le) \
            --env S390X_ESUM=$(yq r platform-matrix.yml ${{ matrix.version }}.esums.s390x) \
            --env AMD64_ESUM=$(yq r platform-matrix.yml ${{ matrix.version }}.esums.amd64) \
        #   Version Envs
            --env REPO=$(yq r platform-matrix.yml ${{ matrix.version }}).repo \
            --env TYPE=$(yq r platform-matrix.yml ${{ matrix.version }}).type \
            --env TAG=$(yq r platform-matrix.yml ${{ matrix.version }}).tag \
            --env VERSION=$(yq r platform-matrix.yml ${{ matrix.version }}).version \
        #   Build Modifier Env
            --env SLIM=$(yq r platform-matrix.yml ${{ matrix.version }}).slim \
            --env JDK78FIX=$(yq r platform-matrix.yml ${{ matrix.version }}).jdk78fix \
        #   ----------
            -f Dockerfile -t jcxldn/openjdk-alpine:${{ matrix.version }} .
